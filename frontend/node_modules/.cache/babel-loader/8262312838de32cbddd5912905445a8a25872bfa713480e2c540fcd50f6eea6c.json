{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AugustinaScapusio\\\\OneDrive\\\\Extended training\\\\AdvanceRouter\\\\frontend\\\\src\\\\pages\\\\ErrorPage.jsx\",\n  _s = $RefreshSig$();\nimport { useRouteError } from \"react-router-dom\";\nimport PageContent from \"../components/PageContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ErrorPage() {\n  _s();\n  const error = useRouteError();\n  let title = 'An error ocurred';\n  let message;\n  if (error.status === 404) {\n    title = \"Page not found\";\n    message = \"The page you are looking for does not exist\";\n  }\n  if (error.status === 500) {\n    message = JSON.parse(error.data).message;\n  }\n  return /*#__PURE__*/_jsxDEV(PageContent, {\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n}\n_s(ErrorPage, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["useRouteError","PageContent","jsxDEV","_jsxDEV","ErrorPage","_s","error","title","message","status","JSON","parse","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AugustinaScapusio/OneDrive/Extended training/AdvanceRouter/frontend/src/pages/ErrorPage.jsx"],"sourcesContent":["import { useRouteError } from \"react-router-dom\";\r\nimport PageContent from \"../components/PageContent\";\r\n\r\nexport default function ErrorPage() {\r\n    const error = useRouteError();\r\n    let title= 'An error ocurred';\r\n    let message\r\n    if(error.status === 404){\r\n      title = \"Page not found\";\r\n      message = \"The page you are looking for does not exist\";\r\n    }\r\n    if(error.status === 500){\r\n      message=JSON.parse(error.data).message;\r\n    }\r\n    return (\r\n      <PageContent title={title}>\r\n        <p>{message}</p>\r\n      </PageContent>\r\n    );\r\n    }\r\n    "],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,KAAK,GAAGN,aAAa,CAAC,CAAC;EAC7B,IAAIO,KAAK,GAAE,kBAAkB;EAC7B,IAAIC,OAAO;EACX,IAAGF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAC;IACtBF,KAAK,GAAG,gBAAgB;IACxBC,OAAO,GAAG,6CAA6C;EACzD;EACA,IAAGF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAC;IACtBD,OAAO,GAACE,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,IAAI,CAAC,CAACJ,OAAO;EACxC;EACA,oBACEL,OAAA,CAACF,WAAW;IAACM,KAAK,EAAEA,KAAM;IAAAM,QAAA,eACxBV,OAAA;MAAAU,QAAA,EAAIL;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB;AAACZ,EAAA,CAhBmBD,SAAS;EAAA,QACfJ,aAAa;AAAA;AAAAkB,EAAA,GADPd,SAAS;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}