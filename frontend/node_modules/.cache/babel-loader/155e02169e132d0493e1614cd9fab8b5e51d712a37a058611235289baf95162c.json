{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AugustinaScapusio\\\\OneDrive\\\\Extended training\\\\AdvanceRouter\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { loader as eventLoader } from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 32\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 31\n      }, this),\n      loader: eventLoader\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 31\n      }, this)\n    }, {\n      path: \":eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 36\n      }, this)\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 41\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventsPage","loader","eventLoader","EventDetailPage","NewEventPage","EditEventPage","EventsRoot","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","App","_c","$RefreshReg$"],"sources":["C:/Users/AugustinaScapusio/OneDrive/Extended training/AdvanceRouter/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter,RouterProvider } from \"react-router-dom\";\nimport RootLayout  from \"./pages/RootLayout\";\nimport  HomePage  from \"./pages/HomePage\";\nimport  EventsPage, {loader as eventLoader}  from \"./pages/EventsPage\";\nimport  EventDetailPage from \"./pages/EventDetailPage\";\nimport  NewEventPage  from \"./pages/NewEventPage\";\nimport  EditEventPage  from \"./pages/EditEventPage\";\nimport EventsRoot from \"./pages/EventsRoot\";\n\n\nconst router = createBrowserRouter([\n  { path: \"/\", \n  element: <RootLayout />, \n  children: [\n    { index:true, element: <HomePage /> },\n    { path: 'events', element: <EventsRoot/>,\n    children: [\n      { index: true, element: <EventsPage />, loader: eventLoader},\n      { path: \"new\", element: <NewEventPage /> },\n      { path: \":eventId\", element: <EventDetailPage />},\n      { path: \":eventId/edit\", element: <EditEventPage />},]},\n  ]}\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n"],"mappings":";AAAA,SAASA,mBAAmB,EAACC,cAAc,QAAQ,kBAAkB;AACrE,OAAOC,UAAU,MAAO,oBAAoB;AAC5C,OAAQC,QAAQ,MAAO,kBAAkB;AACzC,OAAQC,UAAU,IAAGC,MAAM,IAAIC,WAAW,QAAQ,oBAAoB;AACtE,OAAQC,eAAe,MAAM,yBAAyB;AACtD,OAAQC,YAAY,MAAO,sBAAsB;AACjD,OAAQC,aAAa,MAAO,uBAAuB;AACnD,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,MAAM,GAAGb,mBAAmB,CAAC,CACjC;EAAEc,IAAI,EAAE,GAAG;EACXC,OAAO,eAAEH,OAAA,CAACV,UAAU;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAC,IAAI;IAAEN,OAAO,eAAEH,OAAA,CAACT,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACrC;IAAEL,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACF,UAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IACxCC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEN,OAAO,eAAEH,OAAA,CAACR,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEd,MAAM,EAAEC;IAAW,CAAC,EAC5D;MAAEQ,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACJ,YAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC1C;MAAEL,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACL,eAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACjD;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACH,aAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC;EAAE,CAAC;AAC1D,CAAC,CACH,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACX,cAAc;IAACY,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}