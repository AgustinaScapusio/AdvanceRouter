{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AugustinaScapusio\\\\OneDrive\\\\Extended training\\\\AdvanceRouter\\\\frontend\\\\src\\\\pages\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: \"Failed to fetch events.\"}\n    throw new Error(\"Failed to fetch events.\");\n  } else {\n    const events = await response.json();\n    return events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Error","json","$RefreshReg$"],"sources":["C:/Users/AugustinaScapusio/OneDrive/Extended training/AdvanceRouter/frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import EventsList from '../components/EventsList';\r\nimport { useLoaderData } from 'react-router-dom';\r\n\r\nfunction EventsPage() {\r\nconst events= useLoaderData();\r\nif(data.isError){\r\n  return <p>{data.message}</p>\r\n}\r\n\r\n \r\n  return (\r\n    <>\r\n     <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\nconst response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n        // return {isError: true, message: \"Failed to fetch events.\"}\r\n        throw new Error(\"Failed to fetch events.\");\r\n  } else {\r\n    const events = await response.json();\r\n    return events;\r\n  }\r\n }"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAAEP,aAAa,CAAC,CAAC;EAC7B,IAAGQ,IAAI,CAACC,OAAO,EAAC;IACd,oBAAOP,OAAA;MAAAQ,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EAGE,oBACEb,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACCR,OAAA,CAACH,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC7B,CAAC;AAEP;AAACT,EAAA,CAZQD,UAAU;EAAA,QACLL,aAAa;AAAA;AAAAgB,EAAA,GADlBX,UAAU;AAcnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACZ;IACA,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAChD,CAAC,MAAM;IACL,MAAMd,MAAM,GAAG,MAAMW,QAAQ,CAACI,IAAI,CAAC,CAAC;IACpC,OAAOf,MAAM;EACf;AACD;AAAC,IAAAS,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}