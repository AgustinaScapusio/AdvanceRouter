{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AugustinaScapusio\\\\OneDrive\\\\Extended training\\\\AdvanceRouter\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport EventItem from '../components/EventItem';\nimport { json, useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  params\n}) {\n  const id = params.id;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      isError: true,\n      message: \"Failed to fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["EventItem","json","useLoaderData","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","params","id","response","fetch","ok","isError","message","status","$RefreshReg$"],"sources":["C:/Users/AugustinaScapusio/OneDrive/Extended training/AdvanceRouter/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import EventItem from '../components/EventItem';\r\nimport {json , useLoaderData} from 'react-router-dom';\r\n\r\nexport default function EventDetailPage() {\r\n    const data = useLoaderData();\r\n\r\n    return (\r\n        <EventItem event={data.event}/>\r\n    )\r\n    }\r\nexport async function loader({params}) {\r\n        const id=params.id;\r\n        const response = await fetch('http://localhost:8080/events/' + id);\r\n        if (!response.ok) {\r\n              throw json({isError: true, message: \"Failed to fetch details for selected event.\"}, {status:500});\r\n        } else {\r\n              return response;\r\n        }\r\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAAQC,IAAI,EAAGC,aAAa,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAGL,aAAa,CAAC,CAAC;EAE5B,oBACIE,OAAA,CAACJ,SAAS;IAACQ,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEnC;AAACN,EAAA,CANmBD,eAAe;EAAA,QACtBH,aAAa;AAAA;AAAAW,EAAA,GADNR,eAAe;AAOvC,OAAO,eAAeS,MAAMA,CAAC;EAACC;AAAM,CAAC,EAAE;EAC/B,MAAMC,EAAE,GAACD,MAAM,CAACC,EAAE;EAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAClE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACZ,MAAMlB,IAAI,CAAC;MAACmB,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACvG,CAAC,MAAM;IACD,OAAOL,QAAQ;EACrB;AACR;AAAC,IAAAJ,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}